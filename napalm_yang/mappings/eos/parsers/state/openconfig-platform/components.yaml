---
metadata:
    processor: JSONParser
    execute:
        - method: "device.run_commands"
          args:
              commands: ["show inventory"]

components:
    _process: unnecessary
    component:
        _process:
            mode: dict
            from: "{%- set data = {} -%}{%- for k, v in bookmarks.components.0.0.items() -%}{%- if v is mapping and k is not equalto 'systemInformation' -%}{%- for kk, vv in v.items() -%}{%- if k is not equalto 'xcvrSlots' or ( k == 'xcvrSlots' and vv.mfgName is not equalto 'Not Present') -%}{%- do data.update({'{}_{}'.format(k,kk): vv}) -%}{%- endif -%}{%- endfor -%}{%- endif -%}{%- endfor -%} {%- do data.update({'systemInformation': bookmarks.components.0.0.systemInformation})-%}{{ data|json }}"
        name:
            _process:
                mode: value
                value: "{{ component_key }}"
        config:
            _process: unnecessary
        state:
            _process: unnecessary
            name:
                _process:
                    mode: value
                    value: "{{ component_key }}"
            type:
                _process:
                    mode: map
                    value: "{%- set data = component_key.split('_').0 -%}{{ data }}"
                    map:
                        fpgas: CPU
                        xcvrSlots: TRANSCEIVER
                        storageDevices: MODULE
                        precisionClock: MODULE
                        cardSlots: LINECARD
                        powerSupplySlots: POWER_SUPPLY
                        fanTraySlots: FAN
                        systemInformation: CHASSIS
            id:
                _process: not_implemented
            description:
                _process: not_implemented
            mfg-name:
                _process:
                    mode: value
                    value: "{{ bookmarks.parent.mfgName|default() }}"
            version:
                _process:
                    mode: value
                    value: "{{ bookmarks.parent.hardwareRev|default() }}"
                    when: "{{ component_key == 'systemInformation' }}"
            serial-no:
                _process:
                    mode: value
                    value: "{{ bookmarks.parent.serialNum|default('N/A') }}"
                    when: "{{ bookmarks.parent.serialNum is not equalto 'N/A' }}"
            part-no:
                _process:
                    mode: value
                    value: "{%- if component_key.startswith(('xcvr', 'cardSlots')) -%}{{ bookmarks.parent.modelName }}{%- else -%}{{ bookmarks.parent.name }}{%- endif -%}"
            temperature:
                _process: unnecessary
                instant:
                    _process: not_implemented
                avg:
                    _process: not_implemented
                min:
                    _process: not_implemented
                max:
                    _process: not_implemented
        properties:
            _process: unnecessary
            property:
                _process: not_implemented
                name:
                    _process: not_implemented
                config:
                    _process: unnecessary
                    name:
                        _process: not_implemented
                    value:
                        _process: not_implemented
                state:
                    _process: unnecessary
                    name:
                        _process: not_implemented
                    value:
                        _process: not_implemented
                    configurable:
                        _process: not_implemented
        subcomponents:
            _process: unnecessary
            subcomponent:
                _process: not_implemented
                name:
                config:
                    name:
                state:
                name:
